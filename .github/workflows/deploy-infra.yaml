name: EKS Infra Pipeline

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action (plan/apply/destroy)"
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy
      env:
        description: "Environment (e.g. dev, staging, prod)"
        required: true
        default: "dev"

permissions:
  id-token: write   # needed for OIDC auth
  contents: read

jobs:
  networking:
    name: Networking (VPC + Subnets)
    runs-on: ubuntu-latest
    outputs:
      public_subnet_ids: ${{ steps.tf-outputs.outputs.public_subnet_ids }}
      vpc_id: ${{ steps.tf-outputs.outputs.vpc_id }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::555488808142:role/FULL-ACCESS-ADMIN-ROLE
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra/networking
        run: terraform init -input=false

      - name: Terraform ${{ github.event.inputs.action }}
        working-directory: infra/networking
        run: terraform ${{ github.event.inputs.action }} -auto-approve -var="env=${{ github.event.inputs.env }}"

      - name: Terraform Outputs
        id: tf-outputs
        working-directory: infra/networking
        run: |
          echo "public_subnet_ids=$(terraform output -json public_subnet_ids)" >> $GITHUB_OUTPUT
          echo "vpc_id=$(terraform output -raw vpc_id)" >> $GITHUB_OUTPUT

  eks:
    name: EKS Cluster
    runs-on: ubuntu-latest
    needs: networking
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::555488808142:role/FULL-ACCESS-ADMIN-ROLE
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra/eks
        run: terraform init -input=false

      - name: Terraform ${{ github.event.inputs.action }}
        working-directory: infra/eks
        run: |
          terraform ${{ github.event.inputs.action }} -auto-approve \
            -var="env=${{ github.event.inputs.env }}" \
            -var="public_subnet_ids=${{ needs.networking.outputs.public_subnet_ids }}"
